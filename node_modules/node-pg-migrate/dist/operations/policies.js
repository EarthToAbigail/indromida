'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.undoRename = exports.rename = exports.drop = exports.alter = exports.create = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _utils = require('../utils');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var makeClauses = function makeClauses(_ref) {
  var role = _ref.role,
      using = _ref.using,
      check = _ref.check;

  var roles = (Array.isArray(role) ? role : [role]).join(', ');
  var clauses = [];
  if (roles) {
    clauses.push(`TO ${roles}`);
  }
  if (using) {
    clauses.push(`USING (${using})`);
  }
  if (check) {
    clauses.push(`WITH CHECK (${check})`);
  }
  return clauses;
};

var create = exports.create = function create(tableName, policyName) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var createOptions = _extends({}, options, {
    role: options.role || 'PUBLIC'
  });
  var clauses = [`FOR ${options.command || 'ALL'}`].concat(_toConsumableArray(makeClauses(createOptions)));
  return _utils.template`CREATE POLICY "${policyName}" ON "${tableName}" ${clauses.join(' ')};`;
};

var alter = exports.alter = function alter(tableName, policyName) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var clauses = makeClauses(options);
  return _utils.template`ALTER POLICY "${policyName}" ON "${tableName}" ${clauses.join(' ')};`;
};

var drop = exports.drop = function drop(tableName, policyName) {
  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      ifExists = _ref2.ifExists;

  return _utils.template`DROP POLICY${ifExists ? ' IF EXISTS' : ''} "${policyName}" ON "${tableName}";`;
};

var rename = exports.rename = function rename(tableName, policyName, newPolicyName) {
  return _utils.template`ALTER POLICY  "${policyName}" ON "${tableName}" RENAME TO "${newPolicyName}";`;
};

var undoRename = exports.undoRename = function undoRename(tableName, policyName, newPolicyName) {
  return rename(tableName, newPolicyName, policyName);
};

// setup reverse functions
create.reverse = drop;
rename.reverse = undoRename;